[{"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/App.js":"1","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/index.js":"2","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Italy.js":"3"},{"size":2541,"mtime":1609362799930,"results":"4","hashOfConfig":"5"},{"size":219,"mtime":1608811074630,"results":"6","hashOfConfig":"5"},{"size":3798,"mtime":1609363015106,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g5m5qh",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/App.js",["15"],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/index.js",[],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Italy.js",["16"],"import { useEffect, useRef } from \"react\";\nimport { GeoJSON, useMap } from \"react-leaflet\";\nimport * as topojson from \"topojson-client\";\n\nconst Italy = ({\n  provinces,\n  selectedFeature,\n  setSelectedFeature,\n  setCurrentGeoJSON,\n  currentGeoJSON,\n  setFeatureIndex,\n}) => {\n  const geoJSONref = useRef();\n  const map = useMap();\n\n  useEffect(() => {\n    if (!geoJSONref.current) {\n      return;\n    }\n    map.fitBounds(geoJSONref.current.getBounds());\n  }, [currentGeoJSON, geoJSONref.current]);\n\n  const getProvincesFromRegionIstatCode = (istatCode) => {\n    const filteredProvinces = provinces.features.filter(\n      ({ properties }) => properties.reg_istat_code === istatCode\n    );\n\n    return {\n      features: filteredProvinces,\n      type: \"FeatureCollection\",\n    };\n  };\n\n  const getMunicipalitiesForProvinceIstatCode = async (provinceIstatCode) => {\n    const fileName = `estratti_OSM_Italia/static/boundaries/limits_P_${provinceIstatCode}_municipalities.topo.json`;\n    const fileFetched = await fetch(fileName);\n    const municipalities = await fileFetched.json();\n    return topojson.feature(municipalities, \"municipalities\");\n  };\n\n  return (\n    <GeoJSON\n      ref={geoJSONref}\n      eventHandlers={{\n        click: async (e) => {\n          const properties = e.layer.feature.properties;\n          console.log(properties);\n          switch (true) {\n            case !!properties.com_catasto_code:\n              setSelectedFeature({\n                ...selectedFeature,\n                municipality: {\n                  ...selectedFeature.municipality,\n                  name: properties.name,\n                  feature: e.layer.feature,\n                },\n              });\n              setCurrentGeoJSON(e.layer.feature);\n              setFeatureIndex(4);\n              break;\n            case !!properties.prov_istat_code_num:\n              const provIstatCode = properties.prov_istat_code_num;\n              const municipalitiesForIstatCode = await getMunicipalitiesForProvinceIstatCode(\n                provIstatCode\n              );\n              setSelectedFeature({\n                ...selectedFeature,\n                province: {\n                  ...selectedFeature.province,\n                  name: properties.prov_name,\n                  feature: municipalitiesForIstatCode,\n                },\n                municipality: {\n                  ...selectedFeature.municipality,\n                  name: null,\n                  feature: null,\n                },\n              });\n              setCurrentGeoJSON(municipalitiesForIstatCode);\n              setFeatureIndex(3);\n              break;\n            case !!properties.reg_istat_code:\n            default:\n              const regionIstatCode = properties.reg_istat_code;\n              const provincesForIstatCode = getProvincesFromRegionIstatCode(\n                regionIstatCode\n              );\n              setCurrentGeoJSON(provincesForIstatCode);\n              setSelectedFeature({\n                ...selectedFeature,\n                region: {\n                  ...selectedFeature.region,\n                  name: properties.reg_name,\n                  feature: provincesForIstatCode,\n                },\n                province: {\n                  ...selectedFeature.province,\n                  name: null,\n                  feature: null,\n                },\n                municipality: {\n                  ...selectedFeature.municipality,\n                  name: null,\n                  feature: null,\n                },\n              });\n              setFeatureIndex(2);\n              break;\n          }\n        },\n      }}\n      pathOptions={{ color: \"red\" }}\n      key={currentGeoJSON && JSON.stringify(currentGeoJSON).substring(0, 100)}\n      data={currentGeoJSON}\n    />\n  );\n};\n\nexport default Italy;\n",{"ruleId":"17","severity":1,"message":"18","line":3,"column":10,"nodeType":"19","messageId":"20","endLine":3,"endColumn":19},{"ruleId":"21","severity":1,"message":"22","line":21,"column":6,"nodeType":"23","endLine":21,"endColumn":42,"suggestions":"24"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array. Mutable values like 'geoJSONref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [currentGeoJSON, map]",{"range":"28","text":"29"},[458,494],"[currentGeoJSON, map]"]