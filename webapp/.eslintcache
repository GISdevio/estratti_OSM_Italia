[{"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/index.js":"1","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Italy.js":"2","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/App.js":"3","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/style.js":"4","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/SideMenu.js":"5","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Breadcrumb.js":"6","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/filter.js":"7","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/helpers.js":"8"},{"size":219,"mtime":1608811074630,"results":"9","hashOfConfig":"10"},{"size":1127,"mtime":1609847151809,"results":"11","hashOfConfig":"10"},{"size":1983,"mtime":1609845471900,"results":"12","hashOfConfig":"10"},{"size":1660,"mtime":1609690428879,"results":"13","hashOfConfig":"10"},{"size":3034,"mtime":1609848056656,"results":"14","hashOfConfig":"10"},{"size":1683,"mtime":1609846873700,"results":"15","hashOfConfig":"10"},{"size":2212,"mtime":1609847239853,"results":"16","hashOfConfig":"10"},{"size":5841,"mtime":1609847635559,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g5m5qh",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/index.js",[],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Italy.js",["35"],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/App.js",["36"],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/style.js",["37"],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/SideMenu.js",["38"],"import { Treebeard } from \"react-treebeard\";\nimport { useEffect, useState } from \"react\";\nimport style from \"./style\";\nimport * as filters from \"./filter\";\nimport {\n  fillDataFromProperties,\n  getMunicipalitiesForProvinceIstatCode,\n} from \"../../helpers\";\n\nconst SideMenu = ({\n  italyTree,\n  selectedFeature,\n  setSelectedFeature,\n  currentGeoJSON,\n  setCurrentGeoJSON,\n  setFeatureIndex,\n}) => {\n  const [data, setData] = useState(italyTree);\n  const [cursor, setCursor] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const setSelectedIstatProperties = async (selectedIstatProperties) => {\n    if (!selectedIstatProperties) {\n      return;\n    }\n\n    let feature = {\n      properties: selectedIstatProperties,\n      feature: null,\n    };\n\n    if (selectedIstatProperties.prov_istat_code_num) {\n      const featureGeometry = await getMunicipalitiesForProvinceIstatCode(\n        selectedIstatProperties.prov_istat_code_num\n      );\n      feature.feature = featureGeometry;\n    } else if (selectedIstatProperties.com_istat_code_num) {\n      let municipalityFeature;\n      if (currentGeoJSON.features) {\n        municipalityFeature = currentGeoJSON.features.find(\n          ({ properties }) =>\n            properties.com_istat_code_num ===\n            selectedIstatProperties.com_istat_code_num\n        );\n      } else {\n        municipalityFeature = currentGeoJSON;\n      }\n      feature = { ...feature, ...municipalityFeature };\n    }\n\n    fillDataFromProperties(\n      feature,\n      selectedFeature,\n      setSelectedFeature,\n      setCurrentGeoJSON,\n      setFeatureIndex,\n      false\n    );\n  };\n  useEffect(() => {\n    console.log(selectedFeature);\n    if (!selectedFeature.selectionFromMap) {\n      return;\n    }\n\n    const currentName =\n      selectedFeature.municipality.name ||\n      selectedFeature.province.name ||\n      selectedFeature.region.name ||\n      \"Italy\";\n\n    const limitFilter = !selectedFeature.municipality.name;\n    const filter = currentName;\n\n    let filtered = filters.filterTree(italyTree, filter, undefined, false);\n    filtered = filters.expandFilteredNodes(\n      filtered,\n      filter,\n      undefined,\n      limitFilter\n    );\n    setData(filtered);\n  }, [selectedFeature]);\n\n  const onToggle = (node, toggled) => {\n    console.log(node);\n    if (cursor) {\n      cursor.active = false;\n    }\n    node.active = true;\n    if (node.children) {\n      node.toggled = toggled;\n    }\n    setCursor(node);\n    setData(Object.assign({}, data));\n    setSelectedItem(node.name);\n    setSelectedIstatProperties({\n      prov_istat_code_num: node.prov_istat_code_num,\n      reg_istat_code: node.reg_istat_code,\n      com_istat_code_num: node.com_istat_code_num,\n      name: node.name,\n    });\n  };\n  return (\n    <div className=\"sideMenu\">\n      <Treebeard style={style} data={data} onToggle={onToggle} />\n      {selectedItem && (\n        <div className=\"resultItem\">\n          <p>Download: {selectedItem}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SideMenu;\n","/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/Breadcrumb.js",[],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/components/SideMenu/filter.js",[],"/Users/gabriele/personalProjects/estratti_OSM_Italia/webapp/src/helpers.js",[],{"ruleId":"39","severity":1,"message":"40","line":24,"column":6,"nodeType":"41","endLine":24,"endColumn":42,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","endLine":77,"endColumn":3},{"ruleId":"39","severity":1,"message":"50","line":83,"column":6,"nodeType":"41","endLine":83,"endColumn":23,"suggestions":"51"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array. Mutable values like 'geoJSONref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'italyTree'. Either include it or remove the dependency array.",["53"],{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [currentGeoJSON, map]",{"range":"58","text":"59"},"Update the dependencies array to be: [italyTree, selectedFeature]",{"range":"60","text":"61"},[542,578],"[currentGeoJSON, map]",[2224,2241],"[italyTree, selectedFeature]"]